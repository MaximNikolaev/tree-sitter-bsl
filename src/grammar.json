{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "bsl",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "module_variable_definition"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "procedure_definition"
              },
              {
                "type": "SYMBOL",
                "name": "function_definition"
              },
              {
                "type": "SYMBOL",
                "name": "method_annotation"
              }
            ]
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        }
      ]
    },
    "module_variable_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(Var)|(Перем)"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "(?iu)(Export)|(Экспорт)"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "PATTERN",
                        "value": "(?iu)(Export)|(Экспорт)"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "local_variable_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(Var)|(Перем)"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "procedure_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "is_async",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "PATTERN",
                  "value": "(?iu)(Async)|(Асинх)"
                },
                "named": false,
                "value": "async"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Procedure)|(Процедура)"
        },
        {
          "type": "FIELD",
          "name": "identifier",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "parameters_list"
        },
        {
          "type": "FIELD",
          "name": "is_export",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "PATTERN",
                  "value": "(?iu)(Export)|(Экспорт)"
                },
                "named": false,
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "local_variable_definition"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndProcedure)|(КонецПроцедуры)"
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "is_async",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "PATTERN",
                  "value": "(?iu)(Async)|(Асинх)"
                },
                "named": false,
                "value": "async"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Function)|(Функция)"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "parameters_list"
        },
        {
          "type": "FIELD",
          "name": "is_export",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "ALIAS",
                "content": {
                  "type": "PATTERN",
                  "value": "(?iu)(Export)|(Экспорт)"
                },
                "named": false,
                "value": "export"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "local_variable_definition"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndFunction)|(КонецФункции)"
        }
      ]
    },
    "parameters_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "parameter"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "parameter"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "(?iu)(Val)|(Знач)"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "null_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "true_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "false_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "date_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "undefined_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "string_literal"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "number"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_statement": {
      "type": "PREC_LEFT",
      "value": 60,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "return_statement"
          },
          {
            "type": "SYMBOL",
            "name": "method_call_statement"
          },
          {
            "type": "SYMBOL",
            "name": "if_statement"
          },
          {
            "type": "SYMBOL",
            "name": "for_loop_statement"
          },
          {
            "type": "SYMBOL",
            "name": "for_each_loop_statement"
          },
          {
            "type": "SYMBOL",
            "name": "while_loop_statement"
          },
          {
            "type": "SYMBOL",
            "name": "assignment_statement"
          },
          {
            "type": "SYMBOL",
            "name": "try_statement"
          },
          {
            "type": "SYMBOL",
            "name": "raise_exception_statement"
          },
          {
            "type": "SYMBOL",
            "name": "break_statement"
          },
          {
            "type": "SYMBOL",
            "name": "continue_statement"
          }
        ]
      }
    },
    "assignment_statement": {
      "type": "PREC_LEFT",
      "value": 3,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "property_dot_access"
              },
              {
                "type": "SYMBOL",
                "name": "property_bracket_access"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "="
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": ";"
          }
        ]
      }
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(Return)|(Возврат)"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(If)|(Если)"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Then)|(Тогда)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "PATTERN",
                "value": "(?iu)(ElsIf)|(ИначеЕсли)"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "PATTERN",
                "value": "(?iu)(Then)|(Тогда)"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "_statement"
                }
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "PATTERN",
                  "value": "(?iu)(Else)|(Иначе)"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_statement"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndIf)|(КонецЕсли)"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "for_loop_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(For)|(Для)"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "="
            },
            {
              "type": "SYMBOL",
              "name": "number"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(To)|(По)"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Do)|(Цикл)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndDo)|(КонецЦикла)"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "for_each_loop_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(For)|(Для)"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Each)|(Каждого)"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(In)|(Из)"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Do)|(Цикл)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_statement"
              },
              {
                "type": "SYMBOL",
                "name": "break_statement"
              },
              {
                "type": "SYMBOL",
                "name": "continue_statement"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndDo)|(КонецЦикла)"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "while_loop_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(While)|(Пока)"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Do)|(Цикл)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_statement"
              },
              {
                "type": "SYMBOL",
                "name": "break_statement"
              },
              {
                "type": "SYMBOL",
                "name": "continue_statement"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndDo)|(КонецЦикла)"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "break_statement": {
      "type": "PREC_LEFT",
      "value": 51,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "(?iu)(Break)|(Прервать)"
          },
          {
            "type": "STRING",
            "value": ";"
          }
        ]
      }
    },
    "continue_statement": {
      "type": "PREC_LEFT",
      "value": 51,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "(?iu)(Continue)|(Продолжить)"
          },
          {
            "type": "STRING",
            "value": ";"
          }
        ]
      }
    },
    "try_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(Try)|(Попытка)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(Except)|(Исключение)"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "PATTERN",
          "value": "(?iu)(EndTry)|(КонецПопытки)"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "raise_exception_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(Raise)|(ВызватьИсключение)"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "_access": {
      "type": "PREC_LEFT",
      "value": 51,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "property_dot_access"
          },
          {
            "type": "SYMBOL",
            "name": "property_bracket_access"
          },
          {
            "type": "SYMBOL",
            "name": "method_call_access"
          },
          {
            "type": "SYMBOL",
            "name": "method_call_expression"
          }
        ]
      }
    },
    "property_dot_access": {
      "type": "PREC",
      "value": 30,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_access"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "."
          },
          {
            "type": "SYMBOL",
            "name": "identifier"
          }
        ]
      }
    },
    "property_bracket_access": {
      "type": "PREC",
      "value": 30,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_access"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "["
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "]"
          }
        ]
      }
    },
    "method_call_statement": {
      "type": "PREC_LEFT",
      "value": 4,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "method_call_expression"
              },
              {
                "type": "SYMBOL",
                "name": "method_call_access"
              }
            ]
          },
          {
            "type": "STRING",
            "value": ";"
          }
        ]
      }
    },
    "method_call_access": {
      "type": "PREC_LEFT",
      "value": 50,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_access"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "."
          },
          {
            "type": "SYMBOL",
            "name": "method_call_expression"
          }
        ]
      }
    },
    "method_call_expression": {
      "type": "PREC_LEFT",
      "value": 30,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "identifier"
          },
          {
            "type": "SYMBOL",
            "name": "method_arguments"
          }
        ]
      }
    },
    "method_arguments": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_parenthesized_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_arithmetic_operations"
        },
        {
          "type": "SYMBOL",
          "name": "_logical_operations"
        },
        {
          "type": "SYMBOL",
          "name": "calculatebycondition_expression"
        },
        {
          "type": "SYMBOL",
          "name": "new_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_access"
        },
        {
          "type": "SYMBOL",
          "name": "method_call_access"
        },
        {
          "type": "SYMBOL",
          "name": "method_call_expression"
        },
        {
          "type": "SYMBOL",
          "name": "null_literal"
        },
        {
          "type": "SYMBOL",
          "name": "true_literal"
        },
        {
          "type": "SYMBOL",
          "name": "false_literal"
        },
        {
          "type": "SYMBOL",
          "name": "date_literal"
        },
        {
          "type": "SYMBOL",
          "name": "undefined_literal"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "_parenthesized_expression": {
      "type": "PREC_LEFT",
      "value": 20,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "new_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "(?iu)(New)|(Новый)"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "arguments_list"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "arguments_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_arithmetic_operations": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "addition_operation"
        },
        {
          "type": "SYMBOL",
          "name": "subtraction_operation"
        },
        {
          "type": "SYMBOL",
          "name": "multiplication_operation"
        },
        {
          "type": "SYMBOL",
          "name": "division_operation"
        },
        {
          "type": "SYMBOL",
          "name": "residueofdivision_operation"
        },
        {
          "type": "SYMBOL",
          "name": "unaryplus_operation"
        },
        {
          "type": "SYMBOL",
          "name": "unaryminus_operation"
        }
      ]
    },
    "addition_operation": {
      "type": "PREC_LEFT",
      "value": 10,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "+"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "subtraction_operation": {
      "type": "PREC_LEFT",
      "value": 10,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "-"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "multiplication_operation": {
      "type": "PREC_LEFT",
      "value": 11,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "*"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "division_operation": {
      "type": "PREC_LEFT",
      "value": 11,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "residueofdivision_operation": {
      "type": "PREC_LEFT",
      "value": 11,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "%"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "unaryplus_operation": {
      "type": "PREC_LEFT",
      "value": 12,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "+"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "unaryminus_operation": {
      "type": "PREC_LEFT",
      "value": 12,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "-"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "_logical_operations": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_comparison_operations"
        },
        {
          "type": "SYMBOL",
          "name": "_boolean_operations"
        }
      ]
    },
    "_comparison_operations": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "compare_morethan_operation"
        },
        {
          "type": "SYMBOL",
          "name": "compare_moreorequal_operation"
        },
        {
          "type": "SYMBOL",
          "name": "compare_lessthan_operation"
        },
        {
          "type": "SYMBOL",
          "name": "compare_lessorequal_operation"
        },
        {
          "type": "SYMBOL",
          "name": "compare_equal_operation"
        },
        {
          "type": "SYMBOL",
          "name": "compare_notequal_operation"
        }
      ]
    },
    "_boolean_operations": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "or_operation"
        },
        {
          "type": "SYMBOL",
          "name": "and_operation"
        },
        {
          "type": "SYMBOL",
          "name": "not_operation"
        }
      ]
    },
    "compare_morethan_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": ">"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "compare_moreorequal_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": ">="
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "compare_lessthan_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "<"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "compare_lessorequal_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "<="
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "compare_equal_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "="
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "compare_notequal_operation": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "STRING",
            "value": "<>"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "or_operation": {
      "type": "PREC_LEFT",
      "value": 4,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "PATTERN",
            "value": "(?iu)(Or)|(Или)"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "and_operation": {
      "type": "PREC_LEFT",
      "value": 5,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "PATTERN",
            "value": "(?iu)(And)|(И)"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "not_operation": {
      "type": "PREC_LEFT",
      "value": 6,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "(?iu)(Not)|(Не)"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "calculatebycondition_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "?"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "null_literal": {
      "type": "PATTERN",
      "value": "(?iu)(NULL)|(NULL)"
    },
    "true_literal": {
      "type": "PATTERN",
      "value": "(?iu)(True)|(Истина)"
    },
    "false_literal": {
      "type": "PATTERN",
      "value": "(?iu)(False)|(Ложь)"
    },
    "date_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "(?:[^\\r\\n\\u0027])*"
          },
          "named": false,
          "value": "regexp"
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "undefined_literal": {
      "type": "PATTERN",
      "value": "(?iu)(Undefined)|(Неопределено)"
    },
    "string_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "(?:[^\\r\\n\\u0022]|(\\u0022\\u0022)|(?:\\n*\\s*\\u007C))*"
          },
          "named": false,
          "value": "regexp"
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Zа-яёА-ЯЁ_][a-zA-Zа-яёА-ЯЁ0-9_]*"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": 0,
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "//"
            },
            {
              "type": "PATTERN",
              "value": "[^\\r\\n\\u2028\\u2029]*"
            }
          ]
        }
      }
    },
    "preprocessor_instruction": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": "[^\\r\\n\\u2028\\u2029]*"
          }
        ]
      }
    },
    "method_annotation": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "&"
          },
          {
            "type": "PATTERN",
            "value": "[^\\r\\n\\u2028\\u2029]*"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "PATTERN",
      "value": "[\\s\\f\\uFEFF\\u2060\\u200B]|\\r?\\n"
    },
    {
      "type": "SYMBOL",
      "name": "preprocessor_instruction"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}